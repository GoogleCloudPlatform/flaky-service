on:
  push:
    branches:
      - master
  pull_request:
name: ci
jobs:
  server-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12]
    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: flaky_dev_test
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - run: node --version
        working-directory: ./packages/server
      - run: npm install
        working-directory: ./packages/server
      - run: npm test
        working-directory: ./packages/server
        env:
          # use postgres for the host here because we have specified a container for the job.
          # If we were running the job on the VM this would be localhost
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
  frontend-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - run: node --version
        working-directory: ./packages/frontend
      - run: npm install
        working-directory: ./packages/frontend
      - run: npm run test
        working-directory: ./packages/frontend
      - run: npm run e2e
        working-directory: ./packages/frontend
      - run: npm run lint
        working-directory: ./packages/frontend
